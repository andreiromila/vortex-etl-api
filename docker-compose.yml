version: '3.8'

services:
  # --- Base de Datos MySQL ---
  vortex-db:
    image: mysql:8.0
    container_name: vortex_mysql
    ports:
      - "13366:3306" # Mapea el puerto de tu config al puerto por defecto de MySQL
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: vortex_etl
      MYSQL_USER: vortex
      MYSQL_PASSWORD: vortex
    volumes:
      - mysql_data:/var/lib/mysql

  # --- Almacenamiento de Objetos MinIO ---
  vortex-minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z-cpuv1
    container_name: vortex_minio
    ports:
      - "9000:9000" # API
      - "9001:9001" # Consola Web
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    depends_on:
      - vortex-db

  # --- Servicio para crear el Bucket Público automáticamente ---
  # docker-compose.yml (create-buckets)
  create-buckets:
    image: minio/mc
    depends_on:
      - vortex-minio
    entrypoint:
      - /bin/sh
      - -c
      - |
        # 1. Bucle de Espera: Espera a que MinIO esté listo configurando el alias.
        until /usr/bin/mc alias set myminio http://vortex-minio:9000 minioadmin minioadmin; do
          echo '...mc: Esperando a que el servidor MinIO acepte la configuración del alias...';
          sleep 1;
        done;
        
        echo '✅ Alias de MinIO configurado correctamente.';

        # 2. Crea el bucket, tolerando el fallo si ya existe.
        echo 'Creando el bucket vortex-avatars...';
        /usr/bin/mc mb myminio/vortex-avatars || true;
        
        # 3. Establece la política de acceso público
        echo 'Estableciendo la política del bucket a "download" (público para lectura)...';
        /usr/bin/mc anonymous set download myminio/vortex-avatars;

        echo '✅ Tarea de configuración del bucket finalizada.';

volumes:
  mysql_data:
  minio_data: